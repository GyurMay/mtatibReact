{"ast":null,"code":"var _jsxFileName = \"/Users/gyume/mtatib/react/mtatib-react/src/Options.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { options } from \"nodemon/lib/config\";\nimport React from \"react\"; // import \"./tibDB\"\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst locationPermission = false;\nlet globalLat, globalLon;\nconst stopIds = [];\nlet mStation = {};\nlet currentStation = '';\n/**\n * \n * // locDBArr <- get this from the console log from where we get to know what name for locDb[name] went wrong\n// collectorArr <- get this from network tab collector-otp... aka url is requested to https://collector-otp-prod.camsys-apps.com/schedule/MTASBWY/stopsForRoute?apikey=qeqy84JE7hUKfaI0Lxm2Ttcm6ZA0bYrP&&routeId=MTASBWY:${line}`\nit = 0; v ='';\nfor(i in locDBArr){\n    console.log(`\"${collectorArr[it].stopName}\": [${locDBArr[i]}]`, collectorArr[it].stopName, i);\n    it++;\n} //here confirm that the indexing order of these two arr are the same\n\nit = 0; v ='';\nfor(i in locDBArr){\n    v += `\"${collectorArr[it].stopName}\": [${locDBArr[i]}],\\n`;\n    it++;\n}\n */\n\nlet disabled_ids = [];\nexport const back = () => {\n  document.getElementById(\"back\").style.display = 'none';\n  console.log(currentStation);\n  currentStation.style.display = 'none';\n  let options = document.querySelector(\".options\").children;\n\n  for (let i = 0; i < options.length; i++) options[i].style.display = 'block'; //document.querySelector('img[onclick=\"playnavigation()\"]').style.display = '';\n  //document.querySelector('img[onclick=\"playnavigation()\"]').style.animation = '';\n\n\n  while (disabled_ids.length != 0) {\n    document.getElementById(disabled_ids.pop()).style.display = \"block\";\n  }\n};\n\nfunction GetClosestStation(props) {\n  _s();\n\n  const [allLocs, setAllLocs] = useState([]);\n  const [allLines, setAllLines] = useState([]);\n  const [allBusLocs, setAllBusLocs] = useState([]); // const [options_p_Arr, setOptions_p_Arr] = useState([]);\n\n  let home_lat = 40.73671957818318,\n      home_lon = -73.87569054132567;\n  useEffect(() => {\n    (async () => {\n      let x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLocs.json\");\n      let allLocs1 = await x.json();\n      setAllLocs(allLocs1);\n      x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLines.json\");\n      let allLines1 = await x.json();\n      setAllLines(allLines1);\n      x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLocsBus.json\");\n      let allLocs2 = await x.json();\n      setAllBusLocs(allLocs2);\n    })();\n  }, []);\n  useEffect(() => {\n    // let [lat, lon] = [40.6980331, -73.806328];\n    let myloc = [];\n    myloc[0] = lat;\n    console.log(lat);\n    myloc[1] = lon;\n    let num = allLocs; // store [lat,lon] for all given\n\n    let d_arr = {}; // stationName/ p[id]\n\n    let d_arr_cop = []; //distances\n\n    let j, j2;\n\n    for (j = 0; j < allLocs.length; j++) {\n      //logging the distances of the stations with increment j for objects\n      let distance = Math.sqrt((num[j][\"loc\"][0] - myloc[0]) * (num[j][\"loc\"][0] - myloc[0]) + (num[j][\"loc\"][1] - myloc[1]) * (num[j][\"loc\"][1] - myloc[1]));\n      console.log(\"from home to \" + num[j].name + \". distance: \" + distance);\n      d_arr[distance] = num[j].name; //input distance get the station Id\n\n      d_arr_cop[j] = distance;\n    }\n\n    let num2 = allBusLocs;\n\n    for (let k = 0; k < allBusLocs.length; k++) {\n      for (j = 0; j < allBusLocs[k].length; j++) {\n        // logging the distances of the bus Stations with increment j for objects\n        let distance = Math.sqrt((num2[k][j][\"lat\"] - myloc[0]) * (num2[k][j][\"lat\"] - myloc[0]) + (num2[k][j][\"lon\"] - myloc[1]) * (num2[k][j][\"lon\"] - myloc[1]));\n        console.log(\"from home to \" + num2[k][j].name + \". distance: \" + distance);\n        d_arr[distance] = num2[k][j].name; // input distance get the station Id\n\n        d_arr_cop[j] = distance;\n        mStation[num2[k][j].name] = num2[k][j].id;\n      }\n    }\n\n    console.log(\"Before sorting\", d_arr_cop);\n    d_arr_cop.sort();\n    d_arr_cop = [...new Set(d_arr_cop)];\n    console.log(\"After insertion\", d_arr_cop);\n    new Promise(resolve => setTimeout(resolve, 500)); // setTimeout(() => {\n\n    let options_p_Arr = []; // let it=0;\n    // d_arr_cop.forEach(x => {\n\n    let x;\n    let numOptions = 10; // how many stations stops do we want to show?\n\n    for (let i = 0; i < numOptions; i++) {\n      x = d_arr_cop[i];\n      let name = d_arr[x]; // console.log(\"ballll\",d_arr_cop, i, d_arr[x], \"--\", x)\n\n      console.log(\"closest\", d_arr[d_arr_cop[0]]);\n      let line; // let line = (allLines.find(x => x.stopName === name) !== undefined ? 'UN' : allLines.find(x => x.stopName === name).routeId.slice(-1));\n\n      let xaFound = false;\n\n      for (let j = 0; j < allLines.length; j++) {\n        x = allLines[j];\n        let xa = x.find(y => y.stopName === name);\n        x.forEach(y => {\n          mStation[y.stopName] = y.stopId;\n        });\n\n        if (xa !== undefined && !xaFound) {\n          line = xa.routeId.slice(-1);\n          xaFound = true;\n        }\n      }\n\n      if (!xaFound) {\n        let a = allBusLocs;\n        let lines = [];\n\n        for (let k = 0; k < a.length; k++) {\n          let xa = a[k].findIndex(y => y.name === name);\n          console.log(\"xa\", xa);\n\n          if (xa !== -1) {\n            a[k][xa].routes.forEach(y => {\n              line = y.id.includes(\"NYCT\") ? y.shortName : '';\n\n              if (line !== '') {\n                console.log(\"the lineName/busName found::\", line);\n                lines.push(line);\n              } else {\n                console.log(\"bus isn't NYCT bus\");\n              }\n            });\n          }\n        }\n\n        line = lines.join(\" | \");\n      } // for(let j=0;j<num2.length;j++){\n      //     x = allLines[j];\n      //     let xa = x.find(y => y.stopName === name);\n      //     x.forEach(y => { \n      //         mStation[y.stopName] = y.stopId; \n      //     })\n      // }\n      // console.log(JSON.stringify())\n\n\n      let img;\n\n      if (line.length > 1 || line === undefined) {\n        img = line;\n      } else {\n        img = /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://new.mta.info/themes/custom/bootstrap_mta/images/icons/\" + line + \".svg\",\n          style: {\n            height: '1em',\n            padding: '1px 0 2px 3px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }, this);\n      } // img = (<img src={\"https://new.mta.info/themes/custom/bootstrap_mta/images/icons/\"+line+\".svg\"} style={{height:'1em', padding:'1px 0 2px 3px'}} />);\n\n\n      options_p_Arr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        id: name,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        onClick: () => loadSchedulePage(mStation[name], name),\n        children: [img, name]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this));\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: options_p_Arr\n    }, void 0, false); // }, 1000); //wait one sec for sort() function to take place\n    // })();\n    // }, []);\n  }, []);\n}\n\n_s(GetClosestStation, \"xhBPYzaqx9O3hZ30wmJwSN0CgWo=\");\n\n_c = GetClosestStation;\n\nconst tibetanName = engName => {\n  return engName;\n};\n\nconst schedulevisible = stationName => {\n  let id = stationName;\n  console.log(\"times is w/ id:\" + id);\n  let times = document.getElementById(id);\n  currentStation = times;\n  times.style.display = 'block';\n  let options = document.querySelector(\".options\").children;\n\n  for (let i = 0; i < options.length; i++) options[i].style.display = 'none';\n\n  document.getElementById(\"back\").style.display = 'block'; //document.querySelector('img[onclick=\"playnavigation()\"]').style.display = 'none';\n  // navigation.pause();\n  // navigation.currentTime = 0;\n};\n\nconst loadSchedulePage = (line, name) => {\n  // const [jsonResp, setJsonResp] = useState([]); \n  console.log(\"mStation\", mStation);\n  let url = `https://otp-mta-prod.camsys-apps.com/otp/routers/default/nearby?stops=${line}&apikey=Z276E3rCeTzOQEoBPPN4JCEc6GfvdnYE`;\n  let jr = []; // jsonResponse\n\n  (async () => {\n    const resp = await fetch(url);\n    const data = await resp.json();\n    jr = data[0]; // prompt(\"\",JSON.stringify(jr));\n\n    if (document.getElementById(name + '-time') != null) document.getElementById(name + '-time').remove(); //remove old -time if exist\n\n    let stations = document.createElement('p'); //select divId(<p></p>) box\n\n    stations.style.display = 'none';\n    let stationName = document.createElement('div');\n    stationName.innerHTML += '<b>' + name + '</b><br/><br/>';\n    stations.append(stationName);\n    stations.id = name + '-time'; // stations.innerHTML += `<button id=\"go\" style=\"position: relative;padding: 2em;font-size: 50%;left: 27%;background: teal;color: #fff; bottom: 1em;border: 5px solid white;border-radius: 7%;box-shadow: 4px 3px 0.5em black;\">Go Here</button>`;\n    //showTrainTimes();\n\n    let table = document.createElement('table');\n    table.id = \"times\";\n    let shortNames = [],\n        headsigns = [],\n        arrivalTimes = [];\n\n    for (let i = 0; i < jr['groups'].length; i++) {\n      //loop over each route (train Lines)\n      shortNames[i] = jr['groups'][i]['route']['shortName'];\n      headsigns[i] = jr['groups'][i]['headsign'];\n      let numberOfTrains = jr['groups'][i]['times'].length;\n\n      for (let j = 0; j < numberOfTrains; j++) {\n        //get arrival times rows\n        let tr = document.createElement('tr');\n        table.appendChild(tr);\n        tr.innerHTML += `<td><img src='https://new.mta.info/themes/custom/bootstrap_mta/images/icons/${shortNames[i]}.svg'></td>`;\n        tr.innerHTML += '<td>' + tibetanName(headsigns[i]) + '</td>'; //Print HeadSigns (which side is it going)\n\n        let d = new Date(jr['groups'][i]['times'][j]['arrivalFmt']);\n        let h = d.getHours() > 12 ? d.getHours() - 12 : d.getHours();\n        if (h == 0) h = 12;\n        let amPm = d.getHours() > 12 ? 'PM' : 'AM';\n        arrivalTimes[j] = h + ':' + d.getMinutes() + amPm;\n        console.log(\"(new Date()).getHours(): \" + new Date().getHours() + \" > d.getHours(): \" + d.getHours());\n        tr.innerHTML += `<td style='font-size:60%;'>${new Date().getHours() == d.getHours() ? d.getMinutes() - new Date().getMinutes() : 60 - new Date().getMinutes() + d.getMinutes()} min</td>`;\n      }\n\n      document.body.appendChild(stations);\n    }\n\n    stations.appendChild(table);\n    document.getElementById(\"load_icon\").style.display = \"none\";\n    schedulevisible(name + \"-time\");\n  })();\n\n  document.getElementById(\"load_icon\").style.display = \"block\";\n};\n\nconst LoadMainPage = props => {\n  _s2();\n\n  // document.querySelector('#loadLocDb').src = \"https://gyurmay.github.io/mtatib/locDb2/\" + (new URLSearchParams(window.location.search).get('line')) + \".js\";\n  const line = props.line;\n  let url = `https://collector-otp-prod.camsys-apps.com/schedule/MTASBWY/stopsForRoute?apikey=qeqy84JE7hUKfaI0Lxm2Ttcm6ZA0bYrP&&routeId=MTASBWY:${line}`;\n  const [jsonResp, setJsonResp] = useState([]);\n  const [locDb, setLocDb] = useState([]); // const [lat, setLat] = useState();\n  // const [lon, setLon] = useState();\n  // const [mStation, setmStation] = useState({});\n\n  const options_p_Arr = [];\n  useEffect(() => {\n    (async () => {\n      let url2 = \"https://gyurmay.github.io/mtatib/locDb2/\" + new URLSearchParams(document.location.search).get('line') + \".json\"; // let url2 = \"/R.json\";\n\n      const locResp = await fetch(url2);\n      const locData = await locResp.json();\n      setLocDb(locData); // document.write(JSON.stringify(locData))\n\n      const resp = await fetch(url); //Whitehall here but in Loc2DB its \"whitehall st - somthing\".. so making a include instead\n\n      const data = await resp.json();\n      setJsonResp(data);\n      setGeoLocationPermission();\n    })();\n  }, []);\n  jsonResp.forEach(i => {\n    let name = i.stopName; // setLat(locDb); \n    // setLon(locDb[name][1]);\n\n    console.log(JSON.stringify(locDb)); //   setmStation(arr => [...arr, \"\"]);\n\n    mStation[name] = i[\"stopId\"];\n    console.log(`name no work for ${name}`);\n    console.log(`Inserting ${name} with longitude: ${locDb[name][0]}`); //   if(name.includes(\"Center\")) name.replace(/Center/g,\"Ctr\");\n\n    options_p_Arr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      id: name,\n      lon: locDb[name][0],\n      lat: locDb[name][1],\n      onClick: () => loadSchedulePage(mStation[name], name),\n      children: name\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 26\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: options_p_Arr\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s2(LoadMainPage, \"Q/LJxDFPXbNcKQakgD3Mz35fY0g=\");\n\n_c2 = LoadMainPage;\n\nconst setGeoLocationPermission = () => {// navigator.geolocation.getCurrentPosition(position => {\n  //     globalLat = position.coords.latitude;\n  //     globalLon = position.coords.longitude;\n  //     locationPermission = true;\n  //     getClosestStation(globalLat, globalLon);\n  //     let lenny = options[0].childElementCount;\n  //     for(let incre=0; incre<lenny; incre++){\n  //         options[0].appendChild(document.getElementById(d_arr[d_arr_cop[incre]]));\n  //     }\n  // });\n};\n\nconst Options = props => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  let options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: /*#__PURE__*/_jsxDEV(LoadMainPage, {\n        line: urlParams.get('line')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n\n  if (urlParams.get(\"selectLines\") === \"t\") {\n    options = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: /*#__PURE__*/_jsxDEV(GetClosestStation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this);\n  }\n\n  return options;\n};\n\n_c3 = Options;\nexport default Options;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetClosestStation\");\n$RefreshReg$(_c2, \"LoadMainPage\");\n$RefreshReg$(_c3, \"Options\");","map":{"version":3,"names":["options","React","useState","useEffect","locationPermission","globalLat","globalLon","stopIds","mStation","currentStation","disabled_ids","back","document","getElementById","style","display","console","log","querySelector","children","i","length","pop","GetClosestStation","props","allLocs","setAllLocs","allLines","setAllLines","allBusLocs","setAllBusLocs","home_lat","home_lon","x","fetch","allLocs1","json","allLines1","allLocs2","myloc","lat","lon","num","d_arr","d_arr_cop","j","j2","distance","Math","sqrt","name","num2","k","id","sort","Set","Promise","resolve","setTimeout","options_p_Arr","numOptions","line","xaFound","xa","find","y","stopName","forEach","stopId","undefined","routeId","slice","a","lines","findIndex","routes","includes","shortName","push","join","img","height","padding","alignItems","loadSchedulePage","tibetanName","engName","schedulevisible","stationName","times","url","jr","resp","data","remove","stations","createElement","innerHTML","append","table","shortNames","headsigns","arrivalTimes","numberOfTrains","tr","appendChild","d","Date","h","getHours","amPm","getMinutes","body","LoadMainPage","jsonResp","setJsonResp","locDb","setLocDb","url2","URLSearchParams","location","search","get","locResp","locData","setGeoLocationPermission","JSON","stringify","Options","urlParams","window"],"sources":["/Users/gyume/mtatib/react/mtatib-react/src/Options.js"],"sourcesContent":["import { options } from \"nodemon/lib/config\";\nimport React from \"react\"\n// import \"./tibDB\"\nimport {useState, useEffect} from \"react\"\n\nconst locationPermission = false;\nlet globalLat, globalLon;\nconst stopIds = [];\nlet mStation = {};\nlet currentStation = '';\n\n/**\n * \n * // locDBArr <- get this from the console log from where we get to know what name for locDb[name] went wrong\n// collectorArr <- get this from network tab collector-otp... aka url is requested to https://collector-otp-prod.camsys-apps.com/schedule/MTASBWY/stopsForRoute?apikey=qeqy84JE7hUKfaI0Lxm2Ttcm6ZA0bYrP&&routeId=MTASBWY:${line}`\nit = 0; v ='';\nfor(i in locDBArr){\n    console.log(`\"${collectorArr[it].stopName}\": [${locDBArr[i]}]`, collectorArr[it].stopName, i);\n    it++;\n} //here confirm that the indexing order of these two arr are the same\n\nit = 0; v ='';\nfor(i in locDBArr){\n    v += `\"${collectorArr[it].stopName}\": [${locDBArr[i]}],\\n`;\n    it++;\n}\n */\n\nlet disabled_ids = [];\nexport const back = () => {\n    document.getElementById(\"back\").style.display = 'none';\n    console.log(currentStation)\n    currentStation.style.display = 'none';\n    let options = document.querySelector(\".options\").children;\n    for(let i=0;i<options.length;i++)\n        options[i].style.display = 'block';\n    //document.querySelector('img[onclick=\"playnavigation()\"]').style.display = '';\n    //document.querySelector('img[onclick=\"playnavigation()\"]').style.animation = '';\n  \n    while(disabled_ids.length != 0){\n        document.getElementById(disabled_ids.pop()).style.display = \"block\";\n    }\n}\n\nfunction GetClosestStation(props){\n    const [allLocs, setAllLocs] = useState([]);\n    const [allLines, setAllLines] = useState([]);\n    const [allBusLocs, setAllBusLocs] = useState([]);\n    // const [options_p_Arr, setOptions_p_Arr] = useState([]);\n    \n    let home_lat = 40.73671957818318, home_lon = -73.87569054132567;\n\n    useEffect(() => {\n        (async() => {\n\n            let x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLocs.json\");\n            let allLocs1 = (await x.json());\n            setAllLocs(allLocs1);\n\n            x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLines.json\");\n            let allLines1 = (await x.json());\n            setAllLines(allLines1);\n\n            x = await fetch(\"https://gyurmay.github.io/mtatib/locDb2/allLocsBus.json\");\n            let allLocs2 = (await x.json());\n            setAllBusLocs(allLocs2);\n            \n        })();\n    }, []);\n\nuseEffect(() => {\n    // let [lat, lon] = [40.6980331, -73.806328];\n    let myloc = [];\n    myloc[0] = lat; console.log(lat);\n    myloc[1] = lon;\n    let num = allLocs; // store [lat,lon] for all given\n\n    let d_arr = {}; // stationName/ p[id]\n    let d_arr_cop = []; //distances\n    let j, j2;\n    \n    for(j=0;j<allLocs.length;j++){ //logging the distances of the stations with increment j for objects\n        let distance = Math.sqrt((((num[j][\"loc\"][0] - myloc[0])*(num[j][\"loc\"][0] - myloc[0])) + (num[j][\"loc\"][1] - myloc[1])*(num[j][\"loc\"][1] - myloc[1])));\n        console.log(\"from home to \"+ num[j].name + \". distance: \"+distance);\n        d_arr[distance] = num[j].name; //input distance get the station Id\n        d_arr_cop[j] = distance;\n    }\n\n    let num2 = allBusLocs;\n    for(let k=0;k<allBusLocs.length;k++){\n        for(j=0;j<allBusLocs[k].length;j++){ // logging the distances of the bus Stations with increment j for objects\n            let distance = Math.sqrt((((num2[k][j][\"lat\"] - myloc[0])*(num2[k][j][\"lat\"] - myloc[0])) + (num2[k][j][\"lon\"] - myloc[1])*(num2[k][j][\"lon\"] - myloc[1])));\n            console.log(\"from home to \"+ num2[k][j].name + \". distance: \"+distance);\n            d_arr[distance] = num2[k][j].name; // input distance get the station Id\n            d_arr_cop[j] = distance;\n            mStation[num2[k][j].name] = num2[k][j].id;\n        }\n    }\n    \n    console.log(\"Before sorting\", d_arr_cop);\n    d_arr_cop.sort();\n    d_arr_cop = [...new Set(d_arr_cop)];\n    console.log(\"After insertion\", d_arr_cop);\n    new Promise((resolve) => setTimeout(resolve, 500));\n    // setTimeout(() => {\n        let options_p_Arr = [];\n        // let it=0;\n        // d_arr_cop.forEach(x => {\n        let x;\n        let numOptions = 10; // how many stations stops do we want to show?\n        for(let i=0;i<numOptions; i++){ \n            x = d_arr_cop[i];  \n            let name = d_arr[x];\n            // console.log(\"ballll\",d_arr_cop, i, d_arr[x], \"--\", x)\n            console.log(\"closest\", d_arr[d_arr_cop[0]]);\n            let line;\n            // let line = (allLines.find(x => x.stopName === name) !== undefined ? 'UN' : allLines.find(x => x.stopName === name).routeId.slice(-1));\n            let xaFound = false;\n            for(let j=0;j<allLines.length;j++){\n                x = allLines[j];\n                let xa = x.find(y => y.stopName === name);\n                x.forEach(y => { \n                    mStation[y.stopName] = y.stopId;\n                })\n                if(xa !== undefined && !xaFound){\n                    line = xa.routeId.slice(-1);\n                    xaFound = true;\n                }\n            }\n            if(!xaFound){\n                let a = allBusLocs;\n                let lines = [];\n                for(let k=0;k<a.length;k++){\n                    let xa = a[k].findIndex(y => y.name === name);\n                    console.log(\"xa\", xa);\n                    if(xa !== -1){\n                        a[k][xa].routes.forEach(y => {\n                                line = y.id.includes(\"NYCT\") ? y.shortName : '';\n                                if(line !== ''){\n                                    console.log(\"the lineName/busName found::\", line);\n                                    lines.push(line);\n                                }else{ console.log(\"bus isn't NYCT bus\")}\n                            });\n                    }\n                }\n                line = lines.join(\" | \");\n            }\n\n            // for(let j=0;j<num2.length;j++){\n            //     x = allLines[j];\n            //     let xa = x.find(y => y.stopName === name);\n            //     x.forEach(y => { \n            //         mStation[y.stopName] = y.stopId; \n            //     })\n                \n            // }\n\n            // console.log(JSON.stringify())\n            let img;\n            if(line.length > 1 || line === undefined){\n                img = line;\n            }else{\n                img = (<img src={\"https://new.mta.info/themes/custom/bootstrap_mta/images/icons/\"+line+\".svg\"} style={{height:'1em', padding:'1px 0 2px 3px'}} />);\n            }\n            // img = (<img src={\"https://new.mta.info/themes/custom/bootstrap_mta/images/icons/\"+line+\".svg\"} style={{height:'1em', padding:'1px 0 2px 3px'}} />);\n            options_p_Arr.push(\n            <p id={name} style={{display:'flex', alignItems:'center'}} key={name} onClick={() => loadSchedulePage(mStation[name], name)}>\n                {img}\n                {name}\n            </p>);\n        };\n        return (<>{options_p_Arr}</>);\n            // }, 1000); //wait one sec for sort() function to take place\n        // })();\n    // }, []);\n    }, []);\n}\n\nconst tibetanName = (engName) => {\n    return engName;\n};\nconst schedulevisible = (stationName) => {\n    let id = stationName;\n    console.log(\"times is w/ id:\" + id);\n    let times = document.getElementById(id);\n    currentStation = times;\n    times.style.display = 'block';\n    let options = document.querySelector(\".options\").children;\n    for(let i=0;i<options.length;i++)\n        options[i].style.display = 'none';\n    document.getElementById(\"back\").style.display = 'block';\n    //document.querySelector('img[onclick=\"playnavigation()\"]').style.display = 'none';\n    // navigation.pause();\n    // navigation.currentTime = 0;\n}\nconst loadSchedulePage = (line, name) => {\n    // const [jsonResp, setJsonResp] = useState([]); \n    console.log(\"mStation\", mStation);\n    let url = `https://otp-mta-prod.camsys-apps.com/otp/routers/default/nearby?stops=${line}&apikey=Z276E3rCeTzOQEoBPPN4JCEc6GfvdnYE`;\n    let jr = []; // jsonResponse\n\n    (async () => {\n        const resp = await fetch(url);\n        const data = await resp.json();\n        jr = data[0];\n        // prompt(\"\",JSON.stringify(jr));\n        \n        if(document.getElementById(name+'-time') != null) document.getElementById(name+'-time').remove(); //remove old -time if exist\n        let stations = document.createElement('p'); //select divId(<p></p>) box\n        stations.style.display = 'none';\n        let stationName = document.createElement('div');\n        stationName.innerHTML += '<b>'+name+'</b><br/><br/>';\n        stations.append(stationName);\n        stations.id = name+'-time';\n        // stations.innerHTML += `<button id=\"go\" style=\"position: relative;padding: 2em;font-size: 50%;left: 27%;background: teal;color: #fff; bottom: 1em;border: 5px solid white;border-radius: 7%;box-shadow: 4px 3px 0.5em black;\">Go Here</button>`;\n        //showTrainTimes();\n        let table = document.createElement('table');\n        table.id = \"times\";\n        let shortNames = [], headsigns = [], arrivalTimes = [];\n        \n        for(let i=0; i<jr['groups'].length; i++){ //loop over each route (train Lines)\n            shortNames[i] = jr['groups'][i]['route']['shortName'];\n            headsigns[i] = jr['groups'][i]['headsign'];\n            let numberOfTrains = jr['groups'][i]['times'].length;\n            for(let j=0; j<numberOfTrains; j++){ //get arrival times rows\n                let tr = document.createElement('tr');\n                table.appendChild(tr);\n                tr.innerHTML += (`<td><img src='https://new.mta.info/themes/custom/bootstrap_mta/images/icons/${shortNames[i]}.svg'></td>`);\n                tr.innerHTML += '<td>'+tibetanName(headsigns[i])+'</td>'; //Print HeadSigns (which side is it going)\n                let d = new Date(jr['groups'][i]['times'][j]['arrivalFmt']);\n                let h = (d.getHours() > 12) ?  d.getHours() - 12 : d.getHours();\n                if(h == 0) h = 12;\n                let amPm = (d.getHours() > 12) ? 'PM' : 'AM';\n                arrivalTimes[j] =  h+':'+d.getMinutes()+amPm;\n                console.log(\"(new Date()).getHours(): \" + (new Date()).getHours() + \" > d.getHours(): \" + d.getHours());\n                tr.innerHTML += (`<td style='font-size:60%;'>${((new Date()).getHours() == (d.getHours())) ? (d.getMinutes() - (new Date()).getMinutes()) : ( (60 - (new Date()).getMinutes()) + d.getMinutes() ) } min</td>`);\n            }\n\n        document.body.appendChild(stations);\n        }\n        stations.appendChild(table);\n        document.getElementById(\"load_icon\").style.display = \"none\";\n        schedulevisible(name+\"-time\");\n\n    })();\n\n    document.getElementById(\"load_icon\").style.display = \"block\";\n}\n\nconst LoadMainPage = props => {\n    // document.querySelector('#loadLocDb').src = \"https://gyurmay.github.io/mtatib/locDb2/\" + (new URLSearchParams(window.location.search).get('line')) + \".js\";\n    const line = props.line;\n    let url = `https://collector-otp-prod.camsys-apps.com/schedule/MTASBWY/stopsForRoute?apikey=qeqy84JE7hUKfaI0Lxm2Ttcm6ZA0bYrP&&routeId=MTASBWY:${line}`;\n    \n    const [jsonResp, setJsonResp] = useState([]);\n    const [locDb, setLocDb] = useState([]);\n    // const [lat, setLat] = useState();\n    // const [lon, setLon] = useState();\n    // const [mStation, setmStation] = useState({});\n\n    const options_p_Arr = [];\n    useEffect(() => {\n        (async () => {\n            let url2 = \"https://gyurmay.github.io/mtatib/locDb2/\" + (new URLSearchParams(document.location.search).get('line')) + \".json\";\n            // let url2 = \"/R.json\";\n            const locResp = await fetch(url2);\n            const locData = await locResp.json();\n            setLocDb(locData);\n            // document.write(JSON.stringify(locData))\n\n            const resp = await fetch(url); //Whitehall here but in Loc2DB its \"whitehall st - somthing\".. so making a include instead\n            const data = await resp.json();\n            setJsonResp(data);\n\n            setGeoLocationPermission();\n        })();\n    }, []);\n    jsonResp.forEach(i => {\n      let name = i.stopName;\n      // setLat(locDb); \n      // setLon(locDb[name][1]);\n      console.log(JSON.stringify(locDb))\n    //   setmStation(arr => [...arr, \"\"]);\n      mStation[name] = i[\"stopId\"];\n      console.log(`name no work for ${name}`)\n      console.log(`Inserting ${name} with longitude: ${locDb[name][0]}`);\n    //   if(name.includes(\"Center\")) name.replace(/Center/g,\"Ctr\");\n      options_p_Arr.push(<p id={name} lon={locDb[name][0]} lat={locDb[name][1]} key={name} onClick={() => loadSchedulePage(mStation[name], name)} >{name}</p>);\n    });\n\n    return (<><>{options_p_Arr}</></>);\n};\n\nconst setGeoLocationPermission = () => {\n    // navigator.geolocation.getCurrentPosition(position => {\n    //     globalLat = position.coords.latitude;\n    //     globalLon = position.coords.longitude;\n    //     locationPermission = true;\n    //     getClosestStation(globalLat, globalLon);\n    //     let lenny = options[0].childElementCount;\n    //     for(let incre=0; incre<lenny; incre++){\n    //         options[0].appendChild(document.getElementById(d_arr[d_arr_cop[incre]]));\n    //     }\n    // });\n};\n\nconst Options = (props) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let options = (\n            <>\n            <div className=\"options\">\n            <LoadMainPage line={urlParams.get('line')} />\n            </div>\n            </>\n        );\n    if(urlParams.get(\"selectLines\") === \"t\"){\n        options = (\n            <div className=\"options\">\n                <GetClosestStation />\n            </div>\n        );\n    }\n    return options;\n};\n\nexport default Options;"],"mappings":"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"},"metadata":{},"sourceType":"module"}